@using Sitecore.Feature.PageContent
@using Sitecore.Foundation.Alerts
@using Sitecore.Foundation.Alerts.Extensions
@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Repositories
@model Sitecore.Mvc.Presentation.RenderingModel

@if (!Model?.Item?.DescendsFrom(Templates.HasPageContent.ID) ?? true)
{
    @Html.PageEditorError(AlertTexts.InvalidDataSourceTemplate(Templates.HasPageContent.ID), AlertTexts.InvalidDataSourceTemplateFriendlyMessage, Model.Item?.ID, Model.Rendering.Item?.ID)
    return;
}

<div class="thumbnail">
    <a href="@Model.Item.Url()">
        @Html.Sitecore().ImageField(Templates.HasPageContent.Fields.Image, Model.Item, mw: 500, cssClass: "img-responsive")
    </a>
    <div class="caption">
        <h3 class="teaser-heading">
            @Html.Sitecore().Field(Templates.HasPageContent.Fields.Title, Model.Item)
        </h3>
        <p>
            @Html.Sitecore().Field(Templates.HasPageContent.Fields.Summary, Model.Item)
        </p>
        @if (Model.Item.FieldHasValue(Templates.ModuleDetails.Fields.ModuleVideo))
        {
            <p>
                @Html.Sitecore().Field(Templates.ModuleDetails.Fields.ModuleVideo, new { text = Html.Sitecore().Dictionary("/pagecontent/Module Video", "Module Video") })
            </p>
        }

        @if (Model.Item.FieldHasValue(Templates.ModuleDetails.Fields.GitHubLink))
        {
            <p>
                @Html.Sitecore().Field(Templates.ModuleDetails.Fields.GitHubLink, new { text = Html.Sitecore().Dictionary("/pagecontent/GitHub", "Git Hub") })
            </p>
        }

        <!--If child items for current item-->
        @if (Model.Item.HasChildren)
        {
            <a href="@Model.Item.Url()" class="btn btn-default">
                @Html.Sitecore().Dictionary("/PageContent/Teaser/Read more", "Read more")
            </a>
        }

    </div>
</div>